<template>
  <view>
    <view class="user">
      <block wx:if="{{userInfo}}">
        <view class="user-avatar">
          <image src="{{userInfo.avatarUrl}}" mode="cover"/>
        </view>
        <text class="user-name">
          {{userInfo.nickName}}
        </text>        
      </block>
      <block wx:else>
          <button style="background: #f50; color: #fff" wx:if="{{!userInfo}}" open-type="getUserInfo" bindgetuserinfo="bindgetUserInfo"> 使用微信登录</button>
      </block>  
    </view>  
    <block wx:if="{{userInfo}}">
      <view class="user-behavior">
        <view class="behavior-head">
          <text class="behavior-title">我的订单</text>
          <view @tap="allOrder">
            <text class="behavior-all">查看全部</text>
            <i class="iconfont icon-right"></i>
          </view>
        </view>
        <view class="behavior-container">
          <view @tap="waitPayOrder" class="behavior">
            <i class="iconfont icon-pay"></i>
            <text class="behavior-text">待付款</text>
          </view>
          <view @tap="waitDelivery" class="behavior">
            <i class="iconfont icon-time"></i>
            <text class="behavior-text">代发货</text>
          </view>
          <view @tap="waitReceipt" class="behavior">
            <i class="iconfont icon-deliver"></i>
            <text class="behavior-text">待收货</text>
          </view>
          <view @tap="waitComment" class="behavior">
            <i class="iconfont icon-evaluate"></i>
            <text class="behavior-text">待评价</text>
          </view>
        </view>
      </view>
    </block>
  </view>
</template>

<script>
import wepy from 'wepy'
export default class MeInfo extends wepy.component {
  
  data = {
    userInfo: null,
  }

  methods = {    
    bindgetUserInfo: function(e) {
      let that = this

      wx.login({
        success: (res) => {
          if (res.code) {
            wx.request({
              url: that.$root.$parent.service +'/wx/login',
              data: {
                code: res.code
              },
              success: (s) => {
                if (s.data.status == 401) {
                  this.userInfo = null
                } else {
                  wx.setStorageSync('userMd5', s.data)

                  that.$root.$parent.globalData.userInfo = e.detail.userInfo
                  that.userInfo = e.detail.userInfo
                }
                that.$apply()    
              },
              fail: function(e) {
                console.log('fail', e)
              }
            })
          } else {
            console.log('登录失败！' + res.errMsg)
          }
        }
      })
    },

    allOrder () {
      wx.navigateTo({
        url: 'order?type=0'
      })
    },

    waitPayOrder () {
      wx.navigateTo({
        url: 'order?type=1'
      })
    },
    waitDelivery () {
      wx.navigateTo({
        url: 'order?type=2'
      })
    },
    waitReceipt () {
      wx.navigateTo({
        url: 'order?type=3'
      })
    },
    waitComment () {
      wx.navigateTo({
        url: 'order?type=4'
      })
    }
  }

  onLoad () {
    let userInfo = this.$root.$parent.globalData.userInfo
    this.userInfo = userInfo

    this.$apply()
  }
}
</script>

<style lang="stylus" scoped>
  .user
    height 240rpx
    width 100%
    background-color #ffffff
    display flex
    align-items center
    border-bottom 2rpx solid #eee

    .user-avatar
      margin 0 40rpx

      image 
        height 150rpx
        width 150rpx
        border-radius 100%

    .user-name
      font-size 36rpx
      color #666
      margin-top 40rpx
      align-self flex-start

  .user-behavior
    margin-top 10rpx
    
    .behavior-head
      display flex
      height 100rpx
      justify-content space-between
      align-items center
      font-size 32rpx
      color #000
      margin 0 20rpx
    
    .behavior-all
      font-size 26rpx
      color #666
    
    .icon-right
      color #666
      margin-left 10rpx

  .behavior-container
    display flex
    align-items center
    padding-bottom 30rpx
    border-bottom 16rpx solid #eee

    .behavior
      display flex
      flex-direction column
      justify-content space-between
      align-items center
      flex 1

      .behavior-text
        font-size 28rpx
        color #666
        margin-top 8rpx
</style>

<template>
  <view style="border-top: 20rpx solid rgb(238, 238, 238)">
    <block wx:if="{{ isLogin }}">
      <view wx:if="{{cartDataSet.cartItemResponse.length == 0}}" class="empty-cart">
        <view class="cart-img-container">
          <image class="cart-img" src="http://gw.alicdn.com/tfscom/TB1xdQSJFXXXXcuXXXXy7S8WFXX-176-176.png" />
        </view>
        <text style="font-size: 28rpx">购物车快饿瘪了T.T</text>
        <text style="font-size: 26rpx; color:#999; margin: 10rpx 0">主人快给我挑点宝贝吧</text>
        <button>去逛逛</button>
      </view>
      <view wx:else>
        <scroll-view style="height: 90vh;" scroll-y class="cart-item-container">
          <block wx:for="{{cartDataSet.cartItemResponse}}" wx:key="{{index}}">
            <view style="background:#ffffff; margin-top:20rpx;border-radius:30rpx;margin:20rpx 20rpx">
              <view class="cart-item-head">
                <view style="display:flex; align-items:center">
                  <radio @tap="clickSelect({{item.productId}}, {{item.productChecked}}, {{item.specifyId}})" style="display: block; margin-left: 20rpx;" checked="{{ item.productChecked == 1}}" />
                  <view @tap="goshop" style="display:flex;align-items:center">
                    <i class="iconfont icon-shop"></i>
                    <text class="iconfont" style="font-size: 24rpx">TMMALL</text>
                    <i class="iconfont icon-right"></i>
                  </view>
                </view>
                <block wx:if="{{item.productChecked == 1}}">
                  <view @tap="clickDel({{item.productId}}, {{item.specifyId}})" class="del">
                    <text>删除</text><i class="iconfont icon-delete"></i>
                  </view>
                </block>  
              </view>
              <view class="cart-item">
                <view @tap="goDetail({{item.productId}})" class="cart-img-wrap">
                  <image class="item-img" src="{{item.productImage}}" />
                </view>
                <view class="item-info">
                  <view @tap="goDetail({{item.productId}})" class="item-title">
                    {{item.productName}}
                  </view>
                  <view style="width:auto;display:flex;align-items:center;">
                    <text style="display:inline-block; margin-right: 20rpx">类别:</text>{{item.specifyDescItems}}
                  </view>
                  <view style="display: flex;justify-content: space-between">
                    <text class="item-price">￥{{item.price}}</text>
                    <view class="btn-group">
                      <text @tap="clickChangeQuantity({{item.productId}}, {{item.quantity}}, {{item.productStock}} ,minus, {{item.specifyId}})">-</text>
                      <input bindinput="inputInput(({{item.productId}}, {{item.productStock}}, {{item.quantity}})" bindblur="inputBlur({{item.productId}}, {{item.productStock}}, {{item.quantity}}, {{item.specifyId}})" value="{{item.quantity}}" />
                      <text @tap="clickChangeQuantity({{item.productId}}, {{item.quantity}}, {{item.productStock}} ,plus, {{item.specifyId}})">+</text>
                    </view>
                  </view>    
                </view>  
              </view>
            </view>
          </block>
        </scroll-view>
        <block wx:if="{{checkCount > 1}}">
          <view class="del-all">
            <button @tap="delAllSelect">删除选中</button>
          </view>
        </block>
        <cart-bottom-bar :totalPrice.sync="totalPrice"></cart-bottom-bar>
      </view>
    </block>
    <block wx:else>
      <view class="need-login">
        <text>需要登陆后才能访问</text>
        <button @tap="switchLogin">登录</button>
      </view>
    </block>
  </view>  
</template>

<script>
import wepy from 'wepy'
import CartBottomBar from './cart-bottom-bar'

export default class CartItem extends wepy.component{
  props = {
    cartDataSet: {},
    cartItemList: [],
    isLogin: false
  }

  components = {
    'cart-bottom-bar': CartBottomBar
  }

  data = {
    route: {},
    totalPrice: 0,
    checkCount: 0,
  }

  methods = {
    switchLogin () {
      wx.switchTab({
        url: "me"
      });
    },

    clickSelect (productId, check, specifyId) {
      if (specifyId.active) {
        specifyId = null
      }

      let rOj = {
        url: this.route.cartItemSelect,
        method: "PUT",
        header: {
          'Authorization': this.$root.$parent.serviceRoute.jwtToken + wx.getStorageSync('userMd5') // 默认值
        },
        data: {
          'productId': productId,
          'specifyId': specifyId
        },
        success: (s) => {
          if (s.statusCode == 200) {
            this.cartDataSet = s.data.data
          }
          this.$apply()
        },
        fail: function(e) {
          console.log('未登录', e)
        }
      }

      if (check == 1)
        rOj.url = this.route.cartItemUnselected

      wx.request(rOj)
    },

    clickChangeQuantity (productId, quantity, stock, type, specifyId) {
      if (type === 'plus') {
        if (quantity === stock) {
          wx.showToast({
            title: "库存不足",
            icon: "none"
          })
          return;
        } else {
          quantity += 1
        }
      } else {
        if (quantity === 1) {
          wx.showToast({
            title: "不能再少了",
            icon: "none"
          })
          return;
        } else {
          quantity -= 1
        }
      }

      if (specifyId.active) {
        specifyId = null
      }

      let rOj = {
        url: this.route.cart,
        method: "PUT",
        data: {
          "productId": productId,
          "count": quantity,
          'specifyId': specifyId
        },
        header: {
          'Authorization': this.$root.$parent.serviceRoute.jwtToken + wx.getStorageSync('userMd5') // 默认值
        },
        success: (s) => {
          if (s.statusCode == 200)
            this.cartDataSet = s.data.data

          this.$apply()
        },
        fail: function(e) {
          console.log('未登录', e)
        }
      }

      wx.request(rOj)
    },

    inputBlur (productId, stock, quantity, specifyId, event) {
      let newQuantity = parseInt(event.detail.value)
      
      if (newQuantity > stock) {
        wx.showToast({
          title: "库存不足",
          icon: "none"
        })
      } else {
        let rOj = {
          url: this.route.cart,
          method: "PUT",
          data: {
            "productId": productId,
            "count": newQuantity,
            'specifyId': specifyId,
          },
          header: {
            'Authorization': this.$root.$parent.serviceRoute.jwtToken + wx.getStorageSync('userMd5') // 默认值
          },
          success: (s) => {
            if (s.statusCode == 200)
              this.cartDataSet = s.data.data

            this.$apply()
          },
          fail: function(e) {
            console.log('未登录', e)
          }
        }
        wx.request(rOj)        
      }
    },
    inputInput (productId, stock, quantity, event) {
      let newQuantity = parseInt(event.detail.value)
      
      if (newQuantity > stock) {
        wx.showToast({
          title: "库存不足",
          icon: "none"
        })
        return stock
      }
    },

    clickDel (productId, specifyId) {
      if (specifyId.active) {
        specifyId = null
      }
      let rOj = {
        url: this.route.cart,
        method: "DELETE",
        header: {
          'Authorization': this.$root.$parent.serviceRoute.jwtToken + wx.getStorageSync('userMd5') // 默认值
        },
        data: {
          'productId': productId,
          'specifyId': specifyId,
        },
        success: (s) => {
          if (s.statusCode == 200)
            this.cartDataSet = s.data.data

          this.$apply()
        },
        fail: function(e) {
          console.log('未登录', e)
        }
      }
      wx.request(rOj) 
    },

    delAllSelect () {
      let rOj = {
        url: this.route.cart + '/all',
        method: "DELETE",
        header: {
          'Authorization': this.$root.$parent.serviceRoute.jwtToken + wx.getStorageSync('userMd5') // 默认值
        },
        success: (s) => {
          if (s.statusCode == 200)
            this.cartDataSet = s.data.data

          this.$apply()
        },
        fail: function(e) {
          console.log('未登录', e)
        }
      }
      wx.request(rOj) 
    },

    goDetail (productId) {
      wx.navigateTo({
        url: 'detail?id=' + productId
      })
    },

    goshop () {
      wx.navigateTo({
        url: 'searchDetail?id=""'
      })
    }
  }

  events = {
    'allCheck': (allChecked, $event) => {        
        let rOj = {
          url: this.route.cartSelectAll,
          method: "PUT",
          header: {
            'Authorization': this.$root.$parent.serviceRoute.jwtToken + wx.getStorageSync('userMd5') // 默认值
          },
          success: (s) => {
            if (s.statusCode == 200)
              this.cartDataSet = s.data.data

            this.$apply()
          },
          fail: function(e) {
            console.log('未登录', e)
          }
        }

        if (!allChecked) {
          rOj.url = this.route.cartUnselectAll
        }

        wx.request(rOj)
    }
  }

  watch = {
    cartDataSet (newValue, oldValue) {
      this.checkCount = 0
      this.totalPrice = newValue.cartTotalPrice
      
      newValue.cartItemResponse.forEach(element => {
        if (element.productChecked == 1)
          this.checkCount += 1
      })
      
      this.$apply()
    }
  }

  onLoad () {
    if (wx.getStorageSync('userMd5') != null) {
      this.isLogin = true
    } else {
      this.isLogin = false
    }

    this.route = this.$root.$parent.serviceRoute
    this.$apply()
  }
}
</script>

<style lang="stylus" scoped>
  .need-login
    width 100%
    height 100vh
    display flex
    flex-direction column
    align-items center
    justify-content center
    position fixed
    bottom 0
    left 0
    z-index 110

    button
      width 200rpx
      margin-top 20rpx
      color #666
      background #eee

  .empty-cart
    width 100%
    height 800rpx
    display flex
    flex-direction column
    justify-content center
    align-items center
    background rgb(238, 238, 238)

    .cart-img-container
      height 220rpx
      width 220rpx
      border-radius 100%
      background #ccc
      display flex
      justify-content center
      align-items center
      margin-bottom 20rpx
      .cart-img
        width 120rpx
        height 120rpx
        color #ffffff

    button 
      margin-top 20rpx
      width 180rpx
      height 60rpx
      line-height 60rpx
      background rgb(238, 238, 238)
      border 0.2rpx solid #051b28
      text-align center
      font-size 28rpx

  .cart-item-container
    border-bottom 20rpx solid rgb(238, 238, 238)
    border-radius 20rpx


    .cart-item-head
      display flex
      align-items center
      color #666
      margin 10rpx 0
      justify-content space-between
      margin-top 20rpx

      .icon-shop
        margin 20rpx
      
      .del
        display flex
        align-items center
        color: red
        font-size 28rpx
        display inline-block
        margin-right: 20rpx

    .cart-item
      display flex
      align-items center
      margin-bottom 20rpx
      padding-bottom 20rpx

      .cart-img-wrap
        width 200rpx
        height 200rpx
        margin-left 100rpx
        margin-right 20rpx

        .item-img
          width 100%
          height 100%
          background-repeat: no-repeat;
          background-position: center center;
          background-size: cover;

      .item-info
        display flex
        flex-direction column
        justify-content space-between
        font-size 24rpx
        color #666
        height 200rpx
        flex 1 1

        .item-title
          margin-right 10rpx

        .item-price
          font-size 30rpx
          color #ff5000

        .btn-group
          display flex
          justify-content space-between
          widows 100rpx
          height 60rpx
          
          input 
            width 50rpx
            flex 1 0
            text-align center
          text
            display inline-block
            height 50rpx
            width 50rpx
            line-height 50rpx
            font-size 50rpx
            border 2rpx solid #f6f6f6
            text-align center

  .del-all
    position fixed
    bottom 140rpx
    left 30rpx
    
    button
      background #f50
      color #ffffff
</style>

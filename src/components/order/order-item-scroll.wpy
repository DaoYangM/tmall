<template>
  <view class="order-container">
    <scroll-view scroll-y style="height:94vh;" lower-threshold="100" bindscrolltolower="lower" >
      <block wx:if="{{ dataSet.length == 0 }}">
        <empty></empty>
      </block>
      <block wx:else>
        <repeat for="{{dataSet}}">
          <order-item :dataSet.sync="item"></order-item>
        </repeat>        
      </block> 
    </scroll-view>
  </view>
</template>

<script>
import wepy from 'wepy'
import OrderItem from './order-item'
import Empty from '../empty'

export default class orderItemScroll extends wepy.component {
  props = {
    type: 0,
    dataSet: [],
  }

  data = {
    show: '0',
    page: 1,
  }

  methods = {
    lower () {
      console.log("lower")
      
      let url = this.$root.$parent.serviceRoute.order
      this.page += 1

      switch (this.type) {
        case 0:
          url = url + '?type=all&page=' + this.page
          break
        case 1:
          url = url + '?type=wait_pay&page=' + this.page
          break
        case 2:
          url = url + '?type=wait_delivery&page=' + this.page
          break
        case 3:
          url = url + '?type=wait_receipt&page=' + this.page
          break
        case 4:
          url = url + '?type=wait_comment&page=' + this.page
          break
        default:
          url = url + '?type=all&page=' + this.page
          break
      }

      wepy.request({
        'url': url,
        header: {
          'Authorization': this.$root.$parent.serviceRoute.jwtToken + wx.getStorageSync('userMd5') // 默认值
        }
      }).then((res) => {
        console.log("res", res)
        let moreData = res.data.data.list
        if (res.data.data.list.length != 0) {
          console.log(moreData);
          
          this.dataSet = this.dataSet.concat(moreData)

          this.$apply()   
        }
      })
    }
  }

  watch = {
    type (newValue, oldValue) {
      this.type = newValue
      this.page = 1
      this.$apply()
      console.log("changeType", this.type) 
    }
  }
  
  components = {
    'order-item': OrderItem,
    'empty': Empty
  }
}
</script>

<style lang="stylus" scoped>

  .order-container
    margin-top 80rpx
    overflow hidden

    .scroll-view-item
      height 200rpx
      background green
      border 2rpx solid white

  .hiden
    display none  
</style>

<template>
  <view class="order-bottom-container">
    <view>
      共<text style="color:#ff5000">{{buyCount}}</text>件, 总金额
      <view style="display: inline-block; color:#ff5000; font-size: 32rpx" >￥<text>{{totalPrice}}</text></view>
    </view>
    <blocK wx:if="isFromCart">
      <button @tap="goPay" class="btn-submit">提交订单</button>  
    </blocK>
    <blocK wx:else>
      <button @tap="goPay" class="btn-submit">提交订单</button>  
    </blocK>
  </view>
</template>

<script>
import wepy from 'wepy'
export default class OrderBottom extends wepy.component{

  props = {
    productInfo: {},
    totalPrice: 0,
    buyCount: 0,
    isFromCart: Boolean,
  }
  methods = {
    changeTotalPrice (totalPrice, count) {
      this.totalPrice = totalPrice
      this.buyCount = count

      this.$apply()
    },

    goPay () {
      if (this.$root.$parent.globalData.currentaddress != null &&this.$root.$parent.globalData.currentaddress.id != null) {
        let data = {}
        let url
        if (this.isFromCart) {
          console.log("isfromcart is true")
          url = this.$root.$parent.serviceRoute.order + '/' + parseInt(this.$root.$parent.globalData.currentaddress.id)
          data = {}
        } else {
            url = this.$root.$parent.serviceRoute.preOrder
            data = {
              productId: this.productInfo.productId,
              count: parseInt(this.productInfo.count),
              specifyId: parseInt(this.productInfo.pasId),
              shippingId: parseInt(this.$root.$parent.globalData.currentaddress.id),
            }
        }

          wx.showLoading({
            title: '正在生成二维码',
            mask: true
          })
          wepy.request({
            'url': url,
            method: 'POST',
            header: {
              'Authorization': this.$root.$parent.serviceRoute.jwtToken + wx.getStorageSync('userMd5') // 默认值
            },
            'data': data
          }).then((res) => {
            if (res.data.status == 200) {
              console.log(res.data.data)
              wx.navigateTo({
                url: 'pay?qrurl=' + res.data.data
              })
              wx.hideLoading()
            }
          })        
      } else {
        wx.showToast({
          title: '请选择一个收货地址',
          icon: 'none',
        })
      }
    }
  }

  watch = {
    productInfo (newValue) {
      console.log('this.productInfo' , newValue)
      console.log('shippingId',  this.$root.$parent.globalData.currentaddress)
    }
  }
}
</script>

<style lang="stylus" scoped>
  .order-bottom-container
    display flex
    justify-content flex-end
    align-items center
    position fixed
    bottom 0 
    right 0
    font-size 28rpx
    color #666
    box-shadow: 0 -2rpx 0 0 rgba(0,0,0,.1), 0 -1rpx 1rpx 0 rgba(0,0,0,.2)
    width 100%
    overflow hidden
    background #ffffff

    .btn-submit
      margin 0
      background-color #f50
      color #ffffff
      margin-left 18rpx
      height 110rpx
      border-radius 0
      line-height 110rpx
      
</style>

<template>
  <view class="picker-view" animation="{{animationAddressMenu}}" style="visibility:{{addressMenuIsShow ? 'visible':'hidden'}}">
    <view class="ops-group">
      <view class="cancel" catchtap="cityCancel">取消</view>
      <view class="ok" catchtap="citySure">确认</view>
    </view>
    <picker-view style="width: 100%; height: 300px;" bindchange="cityChange" value="{{value}}" wx:key="">
      <picker-view-column>
        <view wx:for="{{provinces}}" class="picker-item">
          {{item.name}}</view>
      </picker-view-column>
      <picker-view-column>
        <view wx:for="{{citys}}" class="picker-item" wx:key="">
          {{item.name}}</view>
      </picker-view-column>
      <picker-view-column>
        <view wx:for="{{areas}}" class="picker-item" wx:key="">
          {{item.name}}</view>
      </picker-view-column>
    </picker-view>
  </view>
</template>

<script>
import wepy from 'wepy'

var address = require('../city.js')

export default class CityPicker extends wepy.component {
  data = {
    animationAddressMenu: {},
    addressMenuIsShow: false,
    value: [0, 0, 0],
    provinces: [],
    citys: [],
    areas: [],
    areaInfo:''
  }

  startAddressAnimation (isShow) {
    console.log(isShow)
    var that = this
    if (isShow) {
      // vh是用来表示尺寸的单位，高度全屏是100vh
      that.animation.translateY(0 + 'vh').step()
    } else {
      that.animation.translateY(30 + 'vh').step()
    }
    
    that.animationAddressMenu = that.animation.export()
    that.addressMenuIsShow = isShow
    this.$apply()
  }

  methods = {
  selectDistrict: function (e) {
    var that = this
    // 如果已经显示，不在执行显示动画
    if (that.data.addressMenuIsShow) {
      return
    }
    // 执行显示动画
    that.startAddressAnimation(true)
  },
  // 执行动画
  // 点击地区选择取消按钮
  cityCancel: function (e) {
    this.startAddressAnimation(false)
  },
  // 点击地区选择确定按钮
  citySure: function (e) {
    var that = this
    var city = that.data.city
    var value = that.data.value
    that.startAddressAnimation(false)
    // 将选择的城市信息显示到输入框
    var areaInfo = that.data.provinces[value[0]].name + ',' + that.data.citys[value[1]].name + ',' + that.data.areas[value[2]].name

    that.areaInfo = areaInfo
    that.$apply()
    console.log(that.areaInfo);
    
    this.$emit('changeArea', that.areaInfo)
    
  },
  // 点击蒙版时取消组件的显示
  hideCitySelected: function (e) {
    console.log(e)
    this.startAddressAnimation(false)
  },
  // 处理省市县联动逻辑
  cityChange: function (e) {
    console.log("cityChange", e)
    var value = e.detail.value
    var provinces = this.data.provinces
    var citys = this.data.citys
    var areas = this.data.areas
    var provinceNum = value[0]
    var cityNum = value[1]
    var countyNum = value[2]
    // 如果省份选择项和之前不一样，表示滑动了省份，此时市默认是省的第一组数据，
    if (this.data.value[0] != provinceNum) {
      var id = provinces[provinceNum].id
      this.value = [provinceNum, 0, 0]
      this.citys = address.citys[id]
      this.areas = address.areas[address.citys[id][0].id]
      
      this.$apply()
    } else if (this.data.value[1] != cityNum) {
      // 滑动选择了第二项数据，即市，此时区显示省市对应的第一组数据
      var id = citys[cityNum].id
      this.value = [provinceNum, cityNum, 0]
      this.areas = address.areas[citys[cityNum].id]
      this.$apply()
    } else {
      // 滑动选择了区
        
      this.value = [provinceNum, cityNum, countyNum]
      this.$apply()
    }
    console.log(this.data)
    }
  }

  events = {
    showSelectDistrict () {
      this.methods.selectDistrict.apply(this)
    }
  }

  onLoad () {
    let animation = wx.createAnimation({
      duration: 250,
      timingFunction: "ease",
      delay: 0
    })

    this.animation = animation

    var id = address.provinces[0].id
    
    this.provinces = address.provinces
    this.citys = address.citys[id]
    this.areas = address.areas[address.citys[id][0].id]
  
    this.$apply()
    console.log(address);
      
  }
}
</script>

<style lang="stylus" scoped>
  .picker-view {
    width: 100%;
    display: flex;
    z-index:12;
    background-color: #fff;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: fixed;
    bottom: 0rpx;
    left: 0rpx;
    height: 30vh;
  }

    .ops-group 
      height 160rpx
      background #f5f5f5
      display flex
      justify-content space-between
      align-items center
      width 100%
      font-size 30rpx

      .cancel
        margin-left 60rpx
        color  #949585 
      .ok
        margin-right 60rpx
        color #45D545 

  .picker-item {
    line-height: 70rpx;
    margin-left: 5rpx;
    margin-right: 5rpx;
    text-align: center;
    font-size 30rpx
  }
</style>
